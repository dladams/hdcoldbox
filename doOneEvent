#!/bin/sh

ACTS=$1
RUN=$2
EVT=$3
OPTS=${@:4}
if [ "$1" = "-h" -o -z "$ACTS" -o -z "$RUN" -o -z "$EVT" ]; then
  echo "Usage $0 ACTS RUN EVT [OPT1 OPT2 ...]"
  echo "   or $0 ACTS RUN_FILE EVT [OPT]"
  echo "  ACTS = Slash delimited sequence of fcl actions. The top-level"
  echo "         fcl includes each of these suffixed with .fcl"
  echo "  RUN = run number or RUN_FILE"
  echo "  EVT = event number"
  echo "  OPTi = option for duneproc (e.g. retry) or"
  echo "         CMSE - Use soldered endpoint channel map with hdread."
  echo "If one of the actions is hdread, then hdread.fcl is created with"
  echo "unpacking and channel map based on run number."
  exit 0
fi
if ! [ $EVT -eq $EVT ] 2>/dev/null; then
  echo EVT must be a number
  exit 1
fi
FRUN=0$RUN
FEVT=$EVT
while [ ${#FEVT} -lt 3 ]; do FEVT=0$FEVT; done
DSNAME=hdcb-$FRUN-$FEVT
XFCL=event$FEVT
RUNDIR=$ACTS/$DSNAME/$XFCL

# Scan the opts.
DPOPTS=
USE_CMSE=
USE_HDREAD=1
for OPT in ${OPTS[@]}; do
  if [ $OPT = CMSE ]; then
    echo Using soldered endpoing channel map.
    USE_CMSE=1
  elif [ $OPT = NOHDREAD ]; then
    echo Not using hdread.
    USE_HDREAD=
  else
    DPOPTS="$DPOPTS $OPT"
  fi
done

# add precom to create the hdread fcl.
PRECOM=$(mktemp tmp_precomXXXXXX)
echo '#!/bin/bash' >>$PRECOM
echo '' >>$PRECOM
echo "$(pwd)/create-fcl $ACTS $RUN $DBG" >>$PRECOM
chmod +x $PRECOM
DPOPTS="$DPOPTS pre-$PRECOM"
TMPFILS=$PRECOM

# Check the fcl exists
REM=$ACTS
while [ $REM != . ]; do
  FCL=$(basename $REM)
  if ! fcldump $FCL.fcl 2>&1 1>/dev/null; then
    echo Fcl not found: $FCL.fcl
    exit 1
  fi
  REM=$(dirname $REM)
done

echo duneproc $ACTS $DSNAME/$XFCL $DPOPTS
duneproc $ACTS $DSNAME/$XFCL $DPOPTS
if [ -n "$TMPFILS" ]; then rm $TMPFILS; fi

echo Copying view.ipynb to $RUNDIR
cp view.ipynb $RUNDIR

OUTBASE=$HOME/xfer/$(date +%Y)
if [ -r $OUTBASE ]; then
  OUTDIR=$OUTBASE/$(date +%m%d)/$ACTS/run$FRUN/$XFCL
  if [ ! -r $OUTDIR ]; then
    echo Creating output directory $OUTDIR
    mkdir -p $OUTDIR
  fi
  echo Output directory: $OUTDIR
  cp $RUNDIR/*.png $OUTDIR
  ls -ls $OUTDIR
fi
